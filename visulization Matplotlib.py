# -*- coding: utf-8 -*-
"""Visulization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12CzPNYNwXG4WE0H2Et3hTabjjafvj8aB
"""

import matplotlib.pyplot as plt

# Sample data: scores of 100 students in a test
scores = [76, 82, 94, 103, 86, 99, 71, 88, 94, 76, 86, 92, 78, 68, 85,
          96, 80, 92, 85, 76, 110, 89, 76, 110, 79, 73, 68, 81, 96, 88]

# Create a histogram
plt.hist(scores, bins=[60, 70, 80, 90, 100, 110, 120], edgecolor='black')

# Titles and labels
plt.title('Distribution of Test Scores')
plt.xlabel('Scores')
plt.ylabel('Frequency')

# Show the plot
plt.show()

import matplotlib.pyplot as plt

# Sample data
data = [113, 115, 119, 121, 124, 124, 125, 126, 127, 127, 128, 129, 130, 130, 131, 132, 133, 136, 136, 137, 137, 140]

# Creating a boxplot
plt.boxplot(data)

# Titles and labels
plt.title("Boxplot of Sample Data")
plt.ylabel("Value")

# Displaying the plot
plt.show()

import matplotlib.pyplot as plt

# Sample data
x = [1, 2, 3, 4, 5]
y = [2, 3, 5, 7, 11]

# Creating a line chart
plt.plot(x, y, label='Sample Data', color='blue', marker='o', linestyle='-')

# Titles, labels, and legend
plt.title("Line Chart of Sample Data")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.legend()

# Displaying the plot
plt.show()

# Second set of sample data
y2 = [1, 4, 6, 8, 10]

# Plotting multiple lines
plt.plot(x, y, label='First Data Set', color='blue', marker='o', linestyle='-')
plt.plot(x, y2, label='Second Data Set', color='red', marker='x', linestyle='--')

# Titles, labels, and legend
plt.title("Comparison of Two Data Sets")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.legend()

# Displaying the plot
plt.show()

import matplotlib.pyplot as plt

# Sample data
x = [5, 7, 8, 5, 6, 7, 9, 2, 3, 4, 4, 4, 2, 6, 3, 6, 8, 6, 4, 1]
y = [7, 4, 3, 9, 1, 3, 2, 5, 2, 4, 8, 7, 1, 6, 4, 9, 7, 7, 5, 1]

# Creating a scatter plot
plt.scatter(x, y, label='Sample Data', color='blue', marker='o', s=100)

# Titles, labels, and legend
plt.title("Scatter Plot of Sample Data")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.legend()

# Displaying the plot
plt.show()

import matplotlib.pyplot as plt

# Sample data
categories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']
values = [10, 15, 40, 30]

# Creating a bar chart
plt.bar(categories, values, color=['red', 'green', 'blue', 'yellow'])

# Titles and labels
plt.title("Bar Chart of Sample Data")
plt.xlabel("Categories")
plt.ylabel("Values")

# Displaying the plot
plt.show()

# Creating a horizontal bar chart
plt.barh(categories, values, color=['red', 'green', 'blue', 'yellow'])

# Titles and labels
plt.title("Horizontal Bar Chart of Sample Data")
plt.xlabel("Values")
plt.ylabel("Categories")

# Displaying the plot
plt.show()

import matplotlib.pyplot as plt

# Sample data
labels = ['Category 1', 'Category 2', 'Category 3', 'Category 4']
sizes = [15, 30, 45, 10]
colors = ['red', 'green', 'blue', 'yellow']
explode = (0.1, 0, 0, 0)  # Explode the 1st slice

# Creating a pie chart
plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90)

# Equal aspect ratio ensures that pie is drawn as a circle.
plt.axis('equal')

# Title
plt.title("Pie Chart of Sample Data")

# Displaying the plot
plt.show()

import pandas as pd

df = pd.read_excel('banking_data.xlsx')

# Display the first few rows of the dataset
print(df)

import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
plt.hist(df['Account Balance'], bins=30, color='blue', alpha=0.7)
plt.title('Distribution of Account Balances')
plt.xlabel('Balance')
plt.ylabel('Number of Customers')
plt.grid(True, which='both', linestyle='--', linewidth=0.5)
plt.show()

plt.figure(figsize=(10, 6))
plt.boxplot(df['Loan Amount'][df['Loan Amount'] > 0], vert=False)
plt.title('Dispersion of Loan Amounts')
plt.xlabel('Loan Amount')
plt.yticks([1], ['Loan Amounts'])
plt.grid(True, which='both', linestyle='--', linewidth=0.5)
plt.show()

plt.figure(figsize=(10, 6))
plt.plot(df['Account Balance'], '-o', color='green', markersize=3)
plt.title('Trend of Account Balances')
plt.xlabel('Customer Index')
plt.ylabel('Account Balance')
plt.grid(True, which='both', linestyle='--', linewidth=0.5)
plt.show()

plt.figure(figsize=(10, 6))
plt.scatter(df['Account Balance'], df['Loan Amount'], alpha=0.6, edgecolors="w", linewidth=0.5)
plt.title('Account Balances vs Loan Amounts')
plt.xlabel('Account Balance')
plt.ylabel('Loan Amount')
plt.grid(True, which='both', linestyle='--', linewidth=0.5)
plt.show()

account_types = df['Account Type'].value_counts()
plt.figure(figsize=(10, 6))
plt.pie(account_types, labels=account_types.index, autopct='%1.1f%%', startangle=90, colors=['cyan', 'magenta'])
plt.title('Distribution of Account Types')
plt.show()

loan_statuses = df['Loan Status'].value_counts()
plt.figure(figsize=(10, 6))
loan_statuses.plot(kind='bar', color=['red', 'blue', 'green'])
plt.title('Distribution of Loan Statuses')
plt.ylabel('Number of Customers')
plt.xlabel('Loan Status')
plt.grid(axis='y', linestyle='--', linewidth=0.5)
plt.xticks(rotation=0)
plt.show()

